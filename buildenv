#
# Set up environment variables for general build tool to operate
#
export ZOPEN_TYPE="TARBALL"

ZOPEN_TARBALL_DIR=m4-1.4.19
export ZOPEN_TARBALL_URL="https://ftp.gnu.org/gnu/m4/${ZOPEN_TARBALL_DIR}.tar.gz"
export ZOPEN_TARBALL_DEPS="curl gzip make m4"
ZOPEN_GIT_DIR=m4
export ZOPEN_GIT_URL="git://git.savannah.gnu.org/${ZOPEN_GIT_DIR}.git"
export ZOPEN_GIT_DEPS="git make m4 help2man perl texinfo xz autoconf automake gettext rsync patch gzip tar gperf sed grep libtool autoconf"
export ZOPEN_GIT_BRANCH="branch-1.4"

export ZOPEN_EXTRA_LDFLAGS=""

# -std=c11 required for max_align_t typedef in stddef.h
rm patches
if [ "${ZOPEN_TYPE}x" = "TARBALLx" ]; then
	export ZOPEN_BOOTSTRAP=skip
	ln -s tarball-patches patches
else
	ln -s git-patches patches
fi

export ZOPEN_EXTRA_CFLAGS="-std=c11 -fgnu89-inline -I\${ZOPEN_ROOT}/${ZOPEN_GIT_DIR}/lib -I\${ZOPEN_ROOT}/patches/PR1/include"

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  #
  # This is temporary until the autotools are fixed to remove
  # hardcoded jenkins paths
  #
  export M4="\$PWD/bin/m4"
fi
ZZ
}

zopen_check_results()
{
chk="$1/$2_check.log"

totalTests=$(cat "${chk}" | grep "^Checking .*" | wc -l)
start_line=$(cat "${chk}" | egrep -n '^Failed checks were:' | awk -F':' '{ print $1 }')
failures=$(cat "${chk}" | tail +${start_line} | head -2 | tail -1 | wc -w)

cat <<ZZ
actualFailures:$failures
totalTests:$totalTests
expectedFailures:4
ZZ
}

